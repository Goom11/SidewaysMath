{"version":3,"sources":["sidewaysmath.js","App.js","serviceWorker.js","index.js"],"names":["or","logic","and","eq","run","lvar","add","mul","SidewaysExpression","expression","strMap","exponent","this","generateExpression","logic_v","ruleSet","calcRuleSet","set","Set","calcRuleSetSoFar","rulesSoFar","length","rest","substring","restExpression","has","get","forEach","r","first","firstExpression","newRule","Math","pow","digit_var","spreadlist","map","d","is_digit","baseExpression","repeat","sidewaysMath","str1","str2","str3","strToSidewaysExpression","Map","str","chars","split","str1Expression","str2Expression","str3Expression","finalRule","goal","c","results","pairs","e","i","App","props","state","bindings","handleSubmit","bind","event","finalMapping","sidewaysmath","setState","preventDefault","listItems","Array","from","keys","key","className","type","id","value","onChange","target","onClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.17f43229.chunk.js","sourcesContent":["import logic from \"logicjs\";\n\nconst or = logic.or,\n  and = logic.and,\n  eq = logic.eq,\n  run = logic.run,\n  lvar = logic.lvar;\n\nconst add = logic.add,\n  mul = logic.mul;\n\nfunction is_digit(digit_var) {\n  const ALL_DIGITS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const spreadlist = ALL_DIGITS.map((d) =>\n    eq(digit_var, d)\n  );\n  return or(...spreadlist);\n}\n\nfunction getUniqueChars(str) {\n  return [...new Set(str.split(\"\"))];\n}\n\nclass SidewaysExpression {\n  constructor(expression, strMap, exponent = 0) {\n    this.exponent = exponent;\n    this.expression = SidewaysExpression.generateExpression(\n      expression,\n      exponent\n    );\n    this.logic_v = lvar(this.expression);\n    this.ruleSet = this.calcRuleSet(strMap);\n    strMap.set(this.expression, this);\n  }\n\n  static generateExpression(baseExpression, exponent) {\n    return baseExpression + \"0\".repeat(exponent);\n  }\n\n  calcRuleSet(strMap) {\n    const ruleSet = new Set();\n    this.calcRuleSetSoFar(strMap, ruleSet);\n    return ruleSet;\n  }\n\n  calcRuleSetSoFar(strMap, rulesSoFar) {\n    if (this.expression.length === 1) {\n      const newRule = is_digit(this.logic_v);\n      rulesSoFar.add(newRule);\n      return;\n    }\n    if (this.exponent !== 0) {\n      const first = this.expression[0];\n      const firstExpression = strMap.has(first)\n        ? strMap.get(first)\n        : new SidewaysExpression(first, strMap);\n      firstExpression.ruleSet.forEach((r) =>\n        rulesSoFar.add(r)\n      );\n\n      const newRule = mul(\n        firstExpression.logic_v,\n        Math.pow(10, this.exponent),\n        this.logic_v\n      );\n\n      rulesSoFar.add(newRule);\n      return;\n    }\n    const rest = this.expression.substring(1);\n    const restExpression = strMap.has(rest)\n      ? strMap.get(rest)\n      : new SidewaysExpression(rest, strMap);\n    restExpression.ruleSet.forEach((r) =>\n      rulesSoFar.add(r)\n    );\n\n    const first = SidewaysExpression.generateExpression(\n      this.expression[0],\n      this.expression.length - 1\n    );\n    const firstExpression = strMap.has(first)\n      ? strMap.get(first)\n      : new SidewaysExpression(\n          this.expression[0],\n          strMap,\n          this.expression.length - 1\n        );\n    firstExpression.ruleSet.forEach((r) =>\n      rulesSoFar.add(r)\n    );\n\n    const newRule = add(\n      restExpression.logic_v,\n      firstExpression.logic_v,\n      this.logic_v\n    );\n    rulesSoFar.add(newRule);\n    return;\n  }\n}\n\nfunction sidewaysMath(str1, str2, str3) {\n  const strToSidewaysExpression = new Map();\n  new SidewaysExpression(str1, strToSidewaysExpression);\n  new SidewaysExpression(str2, strToSidewaysExpression);\n  new SidewaysExpression(str3, strToSidewaysExpression);\n\n  const ruleSet = new Set();\n  const chars = getUniqueChars(str1 + str2 + str3);\n\n  const str1Expression = strToSidewaysExpression.get(str1);\n  const str2Expression = strToSidewaysExpression.get(str2);\n  const str3Expression = strToSidewaysExpression.get(str3);\n  str1Expression.ruleSet.forEach((r) => ruleSet.add(r));\n  str2Expression.ruleSet.forEach((r) => ruleSet.add(r));\n  str3Expression.ruleSet.forEach((r) => ruleSet.add(r));\n  const finalRule = add(\n    str1Expression.logic_v,\n    str2Expression.logic_v,\n    str3Expression.logic_v\n  );\n  ruleSet.add(finalRule);\n\n  const goal = and(...ruleSet);\n  const [, ...results] = run(\n    goal,\n    chars.map(\n      (c) => strToSidewaysExpression.get(c).logic_v\n    ),\n    2\n  );\n  const pairs = chars.map(function (e, i) {\n    return [e, results[0][i]];\n  });\n  return new Map(pairs);\n}\n\n// sidewaysMath(\"egg\", \"egg\", \"page\") =>\n// {\n//     \"e\" : 8\n//     \"g\" : 9\n//     \"p\" : 1\n//     \"a\" : 7\n// }\n\n// sidewaysMath(\"she\", \"eel\", \"else\") =>\n// {\n//     \"s\" : 9\n//     \"h\" : 8\n//     \"e\" : 1\n//     \"l\" : 0\n// }\n// sidewaysMath(\"top\", \"tot\", \"opt\");\n\nexport default sidewaysMath;\n","import React from \"react\";\nimport \"./App.css\";\nimport sidewaysmath from \"./sidewaysmath.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      str1: \"\",\n      str2: \"\",\n      str3: \"\",\n      bindings: new Map(),\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const finalMapping = sidewaysmath(\n      this.state.str1,\n      this.state.str2,\n      this.state.str3\n    );\n    this.setState({ bindings: finalMapping });\n    event.preventDefault();\n  }\n\n  render() {\n    const listItems = Array.from(\n      this.state.bindings.keys()\n    ).map((c) => (\n      <li key={c}>\n        {c} : {this.state.bindings.get(c)}\n      </li>\n    ));\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Aman's Sideways Math Solver</h1>\n          <label>\n            First Word:\n            <input\n              type=\"text\"\n              id=\"str1\"\n              value={this.state.str1}\n              onChange={(e) =>\n                this.setState({ str1: e.target.value })\n              }\n            ></input>\n          </label>\n          <label>\n            Plus Second Word:\n            <input\n              type=\"text\"\n              id=\"str2\"\n              value={this.state.str2}\n              onChange={(e) =>\n                this.setState({ str2: e.target.value })\n              }\n            ></input>\n          </label>\n          <label>\n            Equals Third Word:\n            <input\n              type=\"text\"\n              id=\"str3\"\n              value={this.state.str3}\n              onChange={(e) =>\n                this.setState({ str3: e.target.value })\n              }\n            ></input>\n          </label>\n          <button onClick={this.handleSubmit}>\n            Solve!\n          </button>\n          <ul>{listItems}</ul>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}